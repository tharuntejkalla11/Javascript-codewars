
https://www.codewars.com/kata/525f3eda17c7cd9f9e000b39

function zero(op) {
  return op ? op(0) : 0;
}

function one(op) {
  return op ? op(1) : 1;
}

function two(op) {
  return op ? op(2) : 2;
}

function three(op) {
  return op ? op(3) : 3;
}

function four(op) {
  return op ? op(4) : 4;
}

function five(op) {
  return op ? op(5) : 5;
}

function six(op) {
  return op ? op(6) : 6;
}

function seven(op) {
  return op ? op(7) : 7;
}
function eight(op) {
  return op ? op(8) : 8;
}

function nine(op) {
  return op ? op(9) : 9;
}

function plus(secondno) {
  return function(firstno) {
    return firstno + secondno;
  }
}

function minus(secondno) {
  return function(firstno) {
    return firstno - secondno;
  }
}

function times(secondno) {
  return function(firstno) {
    return firstno * secondno;
  }
}

function dividedBy(secondno) {
  return function(firstno) {
    return Math.floor(firstno / secondno);
  }
}

https://www.codewars.com/kata/56747fd5cb988479af000028

function getMiddle(s) {
  var mid = s.length / 2;
  if (s.length % 2 == 0) {
    return s.slice(mid - 1, mid + 1);
  } else {
    return s.charAt(mid);
  }
}

https://www.codewars.com/kata/525a037c82bf42b9f800029b


function partitionOn(pred, items) {
  var leftPartition = [];
  var rightPartition = [];
  
  for(var i = 0; i < items.length; i++) {
    var item = items[i];
    
    if(!pred(item)) {
      leftPartition.push(item);
    } else {
      rightPartition.push(item);
    }
  }
  
  items.length = 0;
  
  for(var i = 0; i < leftPartition.length; i++) {
    items.push(leftPartition[i]);
  }
  
  for(var i = 0; i < rightPartition.length; i++) {
    items.push(rightPartition[i]);
  }
  
  return leftPartition.length;
}
