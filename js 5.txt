http://www.codewars.com/kata/array-helpers

Array.prototype.square  = function () { 
return this.map(function(n) { return n*n; }); 
}
Array.prototype.cube    = function () { 
return this.map(function(n) { return n*n*n; }); 
}
Array.prototype.average = function () { 
return this.sum() / this.length; 
}
Array.prototype.sum     = function () {
 return this.reduce(function(a, b) { return a + b; }, 0); 
}
Array.prototype.even    = function () {
 return this.filter(function(item) { return 0 == item % 2; }); 
}
Array.prototype.odd     = function () {
 return this.filter(function(item) { return 0 != item % 2; }); 
}


https://www.codewars.com/kata/extract-nested-object-reference

Object.prototype.hash = function(string) {
  try {
    return string.split('.').reduce((acc,i) => acc[i], this);
  } catch(err) {
    return undefined;
  }
 
}

https://www.codewars.com/kata/new-with-apply

function construct(Class, ...arg) {
  let obj = Object.create(Class.prototype)
  Class.apply(obj, [...arg])
  return obj
}

https://www.codewars.com/kata/santaclausable-interface

const isSantaClausable = ({ sayHoHoHo, distributeGifts, goDownTheChimney }) =>
      typeof sayHoHoHo === 'function' &&
      typeof distributeGifts === 'function' &&
      typeof goDownTheChimney === 'function'